definitions:
  schemas.CreateUserSchema:
    properties:
      about:
        description: optional
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
      phone:
        type: string
      role:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone
    - role
    type: object
  schemas.GetUserResponse:
    properties:
      about:
        example: Software developer
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      email:
        example: john.doe@example.com
        type: string
      first_name:
        example: John
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      last_name:
        example: Doe
        type: string
      phone:
        example: "+1234567890"
        type: string
      role:
        example: General
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  schemas.LoginResponse:
    properties:
      message:
        example: Login successful
        type: string
      user:
        $ref: '#/definitions/schemas.GetUserResponse'
    type: object
  schemas.LoginSchema:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
info:
  contact: {}
paths:
  /api/users:
    get:
      description: Fetches users from the system with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 50
        description: Items per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.GetUserResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get users
      tags:
      - Users
  /api/users/{id}:
    get:
      description: Fetches a single user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.GetUserResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - Users
  /api/users/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user with email and password
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/schemas.LoginSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - Users
  /api/users/signup:
    post:
      consumes:
      - application/json
      description: Creates a new user in the system
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateUserSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - Users
swagger: "2.0"
